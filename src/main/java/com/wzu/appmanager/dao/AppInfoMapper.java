package com.wzu.appmanager.dao;

import com.wzu.appmanager.pojo.AppInfo;
import org.apache.ibatis.annotations.Param;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

public interface AppInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_info
     *
     * @mbggenerated Sat Jun 06 17:59:00 CST 2020
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_info
     *
     * @mbggenerated Sat Jun 06 17:59:00 CST 2020
     */
    int insert(AppInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_info
     *
     * @mbggenerated Sat Jun 06 17:59:00 CST 2020
     */
    AppInfo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_info
     *
     * @mbggenerated Sat Jun 06 17:59:00 CST 2020
     */
    List<AppInfo> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_info
     *
     * @mbggenerated Sat Jun 06 17:59:00 CST 2020
     */
    int updateByPrimaryKey(AppInfo record);

    public int add(@Param(value = "softwareName")String softwarename,
                   @Param(value = "APKName" ) String apkname,
                   @Param(value = "supportROM") String supportrom,
                   @Param(value = "interfaceLanguage") String interfacelanguage,
                   @Param(value = "updateDate") Date updatedate,
                   @Param(value = "softwareSize") BigDecimal softwaresize,
                   @Param(value = "devId") Long devid,
                   @Param(value = "appInfo") String appinfo,
                   @Param(value = "status") Integer status,
                   @Param(value = "onSaleDate") Date onsaledate,
                   @Param(value = "offSaleDate") Date offsaledate,
                   @Param(value = "categoryLevel1") Long categorylevel1,
                   @Param(value = "categoryLevel2") Long categorylevel2,
                   @Param(value ="categoryLevel3" )Long categorylevel3,
                   @Param(value = "downloads") Long downloads,
                   @Param(value = "flatformId") Long flatformid,
                   @Param(value = "logoPicPath") String logopicpath,
                   @Param(value = "logoLocPath") String logolocpath,
                   @Param(value = "createdBy") Long createdby,
                   @Param(value = "creationDate") Date creationdate
                    ) throws Exception;

    public int modify(@Param(value = "id") Long id ,
            @Param(value = "softwareName")String softwarename,
                      @Param(value = "APKName" ) String apkname,
                      @Param(value = "supportROM") String supportrom,
                      @Param(value = "interfaceLanguage") String interfacelanguage,
                      @Param(value = "updateDate") Date updatedate,
                      @Param(value = "softwareSize") BigDecimal softwaresize,
                      @Param(value = "devId") Long devid,
                      @Param(value = "appInfo") String appinfo,
                      @Param(value = "status") Integer status,
                      @Param(value = "onSaleDate") Date onsaledate,
                      @Param(value = "offSaleDate") Date offsaledate,
                      @Param(value = "categoryLevel1") Long categorylevel1,
                      @Param(value = "categoryLevel2") Long categorylevel2,
                      @Param(value ="categoryLevel3" )Long categorylevel3,
                      @Param(value = "downloads") Long downloads,
                      @Param(value = "flatformId") Long flatformid,
                      @Param(value = "logoPicPath") String logopicpath,
                      @Param(value = "logoLocPath") String logolocpath,
                      @Param(value = "createdBy") Long createdby,
                      @Param(value = "modifyBy") Long modifyBy,
                      @Param(value = "creationDate") Date creationdate,
                      @Param(value = "modifyDate") Date modifyDate)throws Exception;

    public int deleteAppInfoById(@Param(value="id")Integer delId)throws Exception;

    public List<AppInfo> getAppInfoList(@Param(value="softwareName")String querySoftwareName,
                                        @Param(value="status")Integer queryStatus,
                                        @Param(value="categoryLevel1")Integer queryCategoryLevel1,
                                        @Param(value="categoryLevel2")Integer queryCategoryLevel2,
                                        @Param(value="categoryLevel3")Integer queryCategoryLevel3,
                                        @Param(value="flatformId")Integer queryFlatformId,
                                        @Param(value="devId")Integer devId,
                                        @Param(value="from")Integer currentPageNo,
                                        @Param(value="pageSize")Integer pageSize)throws Exception;

    public int getAppInfoCount(@Param(value="softwareName")String querySoftwareName,
                               @Param(value="status")Integer queryStatus,
                               @Param(value="categoryLevel1")Integer queryCategoryLevel1,
                               @Param(value="categoryLevel2")Integer queryCategoryLevel2,
                               @Param(value="categoryLevel3")Integer queryCategoryLevel3,
                               @Param(value="flatformId")Integer queryFlatformId,
                               @Param(value="devId")Integer devId)throws Exception;

    public AppInfo getAppInfo(@Param(value="id")Integer id,@Param(value="APKName")String APKName)throws Exception;

    public int deleteAppLogo(@Param(value="id")Integer id)throws Exception;

    /**
     * 根据appId，更新最新versionId
     * @param versionId
     * @param appId
     * @return
     * @throws Exception
     */
    public int updateVersionId(@Param(value="versionId")Integer versionId,@Param(value="id")Integer appId)throws Exception;

    /**
     * updateSaleStatusByAppId
     * @param appId
     * @return
     * @throws Exception
     */
    public int updateSaleStatusByAppId(@Param(value="id")Integer appId) throws Exception;

    /*
     * 更新app状态
     * @param status
     * @param id
     * @return
     * @throws Exception
     */
    public int updateSatus(@Param(value="status") Long status, @Param(value="id") Long id)throws Exception;


}